{"ast":null,"code":"var _jsxFileName = \"/Users/jonathan.picovsky/Desktop/react-project-1-picojp32/ToDo/src/components/Notes.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState } from 'react';\nimport EdiText from 'react-editext';\nimport Modal from 'react-modal';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nModal.setAppElement('#root');\n\nconst Notes = ({\n  notes,\n  setNotes,\n  title,\n  text,\n  date\n}) => {\n  _s();\n\n  const [modalIsOpen, setModalIsOpen] = useState(false);\n  const [value, setValue] = useState('');\n\n  const handleSave = val => {\n    console.log('Edited Value -> ', val);\n    setValue(val);\n  };\n\n  const removeHandler = e => {\n    e.preventDefault();\n\n    if (window.confirm(\"Are you sure you want to delete your note?\")) {\n      setNotes(notes.filter(notes => notes.date !== date));\n    }\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"notes\",\n    children: [/*#__PURE__*/_jsxDEV(\"li\", {\n      className: \"note-item\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"date\",\n        children: date\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 28,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: removeHandler,\n        className: \"remove-btn\",\n        children: \"DELETE\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 29,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: () => setModalIsOpen(true),\n        className: \"modal-btn\",\n        children: \"OPEN\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 30,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        children: title\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 31,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"text\",\n        children: text\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 32,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 27,\n      columnNumber: 12\n    }, this), /*#__PURE__*/_jsxDEV(Modal, {\n      isOpen: modalIsOpen,\n      onRequestClose: () => setModalIsOpen(false),\n      children: /*#__PURE__*/_jsxDEV(\"li\", {\n        className: \"note-item\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"date\",\n          children: date\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 36,\n          columnNumber: 17\n        }, this), /*#__PURE__*/_jsxDEV(EdiText, {\n          type: \"text\",\n          value: text,\n          onSave: handleSave,\n          hideIcons: true\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 37,\n          columnNumber: 17\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: () => setModalIsOpen(false),\n          className: \"close-btn\",\n          children: \"Close\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 44,\n          columnNumber: 17\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          className: \"remove-btn\",\n          children: \"Edit\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 46,\n          columnNumber: 17\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 35,\n        columnNumber: 12\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 34,\n      columnNumber: 12\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 26,\n    columnNumber: 8\n  }, this);\n};\n\n_s(Notes, \"b+i9rq5ak8brejTxGVFuhu56ZcI=\");\n\n_c = Notes;\nexport default Notes;\n\nvar _c;\n\n$RefreshReg$(_c, \"Notes\");","map":{"version":3,"sources":["/Users/jonathan.picovsky/Desktop/react-project-1-picojp32/ToDo/src/components/Notes.js"],"names":["React","useState","EdiText","Modal","setAppElement","Notes","notes","setNotes","title","text","date","modalIsOpen","setModalIsOpen","value","setValue","handleSave","val","console","log","removeHandler","e","preventDefault","window","confirm","filter"],"mappings":";;;AAAA,OAAOA,KAAP,IAAcC,QAAd,QAA6B,OAA7B;AACA,OAAOC,OAAP,MAAoB,eAApB;AAEA,OAAOC,KAAP,MAAkB,aAAlB;;AAGAA,KAAK,CAACC,aAAN,CAAoB,OAApB;;AAEA,MAAMC,KAAK,GAAG,CAAC;AAACC,EAAAA,KAAD;AAAQC,EAAAA,QAAR;AAAiBC,EAAAA,KAAjB;AAAuBC,EAAAA,IAAvB;AAA6BC,EAAAA;AAA7B,CAAD,KAAwC;AAAA;;AAClD,QAAM,CAACC,WAAD,EAAcC,cAAd,IAAgCX,QAAQ,CAAC,KAAD,CAA9C;AACA,QAAM,CAACY,KAAD,EAAQC,QAAR,IAAoBb,QAAQ,CAAC,EAAD,CAAlC;;AAEA,QAAMc,UAAU,GAAIC,GAAD,IAAS;AACxBC,IAAAA,OAAO,CAACC,GAAR,CAAY,kBAAZ,EAAgCF,GAAhC;AACAF,IAAAA,QAAQ,CAACE,GAAD,CAAR;AACD,GAHH;;AAKA,QAAMG,aAAa,GAAIC,CAAD,IAAO;AACzBA,IAAAA,CAAC,CAACC,cAAF;;AACA,QAAIC,MAAM,CAACC,OAAP,CAAe,4CAAf,CAAJ,EAAkE;AAC9DhB,MAAAA,QAAQ,CAACD,KAAK,CAACkB,MAAN,CAAclB,KAAK,IAAIA,KAAK,CAACI,IAAN,KAAeA,IAAtC,CAAD,CAAR;AACH;AACJ,GALD;;AAOA,sBACG;AAAK,IAAA,SAAS,EAAC,OAAf;AAAA,4BACI;AAAI,MAAA,SAAS,EAAC,WAAd;AAAA,8BACK;AAAK,QAAA,SAAS,EAAC,MAAf;AAAA,kBAAuBA;AAAvB;AAAA;AAAA;AAAA;AAAA,cADL,eAEK;AAAQ,QAAA,OAAO,EAAES,aAAjB;AAA+B,QAAA,SAAS,EAAC,YAAzC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cAFL,eAGK;AAAQ,QAAA,OAAO,EAAE,MAAKP,cAAc,CAAC,IAAD,CAApC;AAA2C,QAAA,SAAS,EAAC,WAArD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cAHL,eAIK;AAAA,kBAAMJ;AAAN;AAAA;AAAA;AAAA;AAAA,cAJL,eAKK;AAAK,QAAA,SAAS,EAAC,MAAf;AAAA,kBAAuBC;AAAvB;AAAA;AAAA;AAAA;AAAA,cALL;AAAA;AAAA;AAAA;AAAA;AAAA,YADJ,eAQI,QAAC,KAAD;AAAO,MAAA,MAAM,EAAEE,WAAf;AAA4B,MAAA,cAAc,EAAE,MAAMC,cAAc,CAAC,KAAD,CAAhE;AAAA,6BACA;AAAI,QAAA,SAAS,EAAC,WAAd;AAAA,gCACK;AAAK,UAAA,SAAS,EAAC,MAAf;AAAA,oBAAuBF;AAAvB;AAAA;AAAA;AAAA;AAAA,gBADL,eAEK,QAAC,OAAD;AACI,UAAA,IAAI,EAAC,MADT;AAEI,UAAA,KAAK,EAAED,IAFX;AAGI,UAAA,MAAM,EAAEM,UAHZ;AAII,UAAA,SAAS,EAAE;AAJf;AAAA;AAAA;AAAA;AAAA,gBAFL,eASK;AAAQ,UAAA,OAAO,EAAE,MAAKH,cAAc,CAAC,KAAD,CAApC;AACA,UAAA,SAAS,EAAC,WADV;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBATL,eAWK;AAAQ,UAAA,SAAS,EAAC,YAAlB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBAXL;AAAA;AAAA;AAAA;AAAA;AAAA;AADA;AAAA;AAAA;AAAA;AAAA,YARJ;AAAA;AAAA;AAAA;AAAA;AAAA,UADH;AA0BH,CA1CD;;GAAMP,K;;KAAAA,K;AA4CN,eAAeA,KAAf","sourcesContent":["import React,{useState} from 'react'\nimport EdiText from 'react-editext'\n\nimport Modal from 'react-modal'\n\n\nModal.setAppElement('#root')\n\nconst Notes = ({notes, setNotes,title,text, date}) => {\n    const [modalIsOpen, setModalIsOpen] = useState(false)\n    const [value, setValue] = useState('');\n\n    const handleSave = (val) => {\n        console.log('Edited Value -> ', val);\n        setValue(val);\n      };\n\n    const removeHandler = (e) => {\n        e.preventDefault();\n        if (window.confirm(\"Are you sure you want to delete your note?\")) {\n            setNotes(notes.filter((notes => notes.date !== date)));\n        }\n    };\n\n    return(\n       <div className=\"notes\">\n           <li className=\"note-item\">\n                <div className=\"date\">{date}</div>\n                <button onClick={removeHandler}className=\"remove-btn\">DELETE</button> \n                <button onClick={()=> setModalIsOpen(true)}className=\"modal-btn\">OPEN</button>\n                <div>{title}</div>\n                <div className=\"text\">{text}</div>\n            </li>  \n           <Modal isOpen={modalIsOpen} onRequestClose={() => setModalIsOpen(false)}>\n           <li className=\"note-item\">\n                <div className=\"date\">{date}</div>\n                <EdiText\n                    type=\"text\"\n                    value={text}\n                    onSave={handleSave}\n                    hideIcons={true}\n                />\n            \n                <button onClick={()=> setModalIsOpen(false)}\n                className=\"close-btn\">Close</button>\n                <button className=\"remove-btn\">Edit</button> \n            </li>\n            </Modal> \n       </div>     \n    );\n}\n\nexport default Notes;\n\n\n"]},"metadata":{},"sourceType":"module"}