{"ast":null,"code":"var _jsxFileName = \"/Users/jonathan.picovsky/Desktop/react-project-1-picojp32/NotesApp/src/components/Form.js\";\nimport React from \"react\";\nimport moment from \"moment\";\nimport NoteList from \"./NoteList\";\nimport TextareaAutosize from \"react-textarea-autosize\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst Form = ({\n  inputTitle,\n  inputText,\n  setInputText,\n  setInputTitle,\n  notes,\n  setNotes\n}) => {\n  const inputTitleHandler = e => {\n    setInputTitle(e.target.value);\n  };\n\n  const inputTextHandler = e => {\n    setInputText(e.target.value);\n  };\n\n  const addNotesHandler = e => {\n    e.preventDefault();\n    setNotes([...notes, {\n      title: inputTitle,\n      text: inputText,\n      date: moment().format(\"MMMM Do YYYY,h:mm:ss a\")\n    }]);\n    setInputTitle(\"\");\n    setInputText(\"\");\n  };\n\n  function editNote(note) {\n    const index = notes.findIndex(item => item.id === note.id);\n    const copy = [...notes];\n    copy[index] = note;\n    setNotes(copy);\n  }\n\n  const removeHandler = e => {\n    e.preventDefault();\n\n    if (window.confirm(\"Are you sure you want to delete your note?\")) {\n      setNotes(notes.filter(notes => notes.date !== date));\n    }\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"form\", {\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"form-container\",\n      children: [/*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        value: inputTitle,\n        onChange: inputTitleHandler,\n        className: \"title-input\",\n        placeholder: \"Title\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 45,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(TextareaAutosize, {\n        value: inputText,\n        onChange: inputTextHandler,\n        className: \"notes-input\",\n        placeholder: \"Note\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 52,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: addNotesHandler,\n        type: \"submit\",\n        className: \"notes-button\",\n        children: \"Add to List\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 58,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 44,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(NoteList, {\n      noteList: noteList,\n      removeHandler: removeHandler,\n      editNote: editNote\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 66,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 43,\n    columnNumber: 5\n  }, this);\n};\n\n_c = Form;\nexport default Form;\n\nvar _c;\n\n$RefreshReg$(_c, \"Form\");","map":{"version":3,"sources":["/Users/jonathan.picovsky/Desktop/react-project-1-picojp32/NotesApp/src/components/Form.js"],"names":["React","moment","NoteList","TextareaAutosize","Form","inputTitle","inputText","setInputText","setInputTitle","notes","setNotes","inputTitleHandler","e","target","value","inputTextHandler","addNotesHandler","preventDefault","title","text","date","format","editNote","note","index","findIndex","item","id","copy","removeHandler","window","confirm","filter","noteList"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,MAAP,MAAmB,QAAnB;AACA,OAAOC,QAAP,MAAqB,YAArB;AACA,OAAOC,gBAAP,MAA6B,yBAA7B;;;AAEA,MAAMC,IAAI,GAAG,CAAC;AAACC,EAAAA,UAAD;AAAYC,EAAAA,SAAZ;AAAsBC,EAAAA,YAAtB;AAAmCC,EAAAA,aAAnC;AAAiDC,EAAAA,KAAjD;AAAuDC,EAAAA;AAAvD,CAAD,KAAsE;AACjF,QAAMC,iBAAiB,GAAIC,CAAD,IAAO;AAC/BJ,IAAAA,aAAa,CAACI,CAAC,CAACC,MAAF,CAASC,KAAV,CAAb;AACD,GAFD;;AAIA,QAAMC,gBAAgB,GAAIH,CAAD,IAAO;AAC9BL,IAAAA,YAAY,CAACK,CAAC,CAACC,MAAF,CAASC,KAAV,CAAZ;AACD,GAFD;;AAIA,QAAME,eAAe,GAAIJ,CAAD,IAAO;AAC7BA,IAAAA,CAAC,CAACK,cAAF;AACAP,IAAAA,QAAQ,CAAC,CACP,GAAGD,KADI,EAEP;AACES,MAAAA,KAAK,EAAEb,UADT;AAEEc,MAAAA,IAAI,EAAEb,SAFR;AAGEc,MAAAA,IAAI,EAAEnB,MAAM,GAAGoB,MAAT,CAAgB,wBAAhB;AAHR,KAFO,CAAD,CAAR;AAQAb,IAAAA,aAAa,CAAC,EAAD,CAAb;AACAD,IAAAA,YAAY,CAAC,EAAD,CAAZ;AACD,GAZD;;AAcA,WAASe,QAAT,CAAkBC,IAAlB,EAAwB;AACtB,UAAMC,KAAK,GAAEf,KAAK,CAACgB,SAAN,CAAiBC,IAAD,IAASA,IAAI,CAACC,EAAL,KAAYJ,IAAI,CAACI,EAA1C,CAAb;AACA,UAAMC,IAAI,GAAG,CAAC,GAAGnB,KAAJ,CAAb;AACAmB,IAAAA,IAAI,CAACJ,KAAD,CAAJ,GAAcD,IAAd;AACAb,IAAAA,QAAQ,CAACkB,IAAD,CAAR;AACD;;AAED,QAAMC,aAAa,GAAIjB,CAAD,IAAO;AAC3BA,IAAAA,CAAC,CAACK,cAAF;;AACA,QAAIa,MAAM,CAACC,OAAP,CAAe,4CAAf,CAAJ,EAAkE;AAC9DrB,MAAAA,QAAQ,CAACD,KAAK,CAACuB,MAAN,CAAcvB,KAAK,IAAIA,KAAK,CAACW,IAAN,KAAeA,IAAtC,CAAD,CAAR;AACH;AACJ,GALC;;AAMA,sBACE;AAAA,4BACE;AAAK,MAAA,SAAS,EAAC,gBAAf;AAAA,8BACE;AACE,QAAA,IAAI,EAAC,MADP;AAEE,QAAA,KAAK,EAAEf,UAFT;AAGE,QAAA,QAAQ,EAAEM,iBAHZ;AAIE,QAAA,SAAS,EAAC,aAJZ;AAKE,QAAA,WAAW,EAAC;AALd;AAAA;AAAA;AAAA;AAAA,cADF,eAQE,QAAC,gBAAD;AACE,QAAA,KAAK,EAAEL,SADT;AAEE,QAAA,QAAQ,EAAES,gBAFZ;AAGE,QAAA,SAAS,EAAC,aAHZ;AAIE,QAAA,WAAW,EAAC;AAJd;AAAA;AAAA;AAAA;AAAA,cARF,eAcE;AACE,QAAA,OAAO,EAAEC,eADX;AAEE,QAAA,IAAI,EAAC,QAFP;AAGE,QAAA,SAAS,EAAC,cAHZ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cAdF;AAAA;AAAA;AAAA;AAAA;AAAA,YADF,eAuBE,QAAC,QAAD;AAAU,MAAA,QAAQ,EAAEiB,QAApB;AAA8B,MAAA,aAAa,EAAEJ,aAA7C;AAA4D,MAAA,QAAQ,EAAEP;AAAtE;AAAA;AAAA;AAAA;AAAA,YAvBF;AAAA;AAAA;AAAA;AAAA;AAAA,UADF;AA2BD,CA/DD;;KAAMlB,I;AAiEN,eAAeA,IAAf","sourcesContent":["import React from \"react\";\nimport moment from \"moment\";\nimport NoteList from \"./NoteList\";\nimport TextareaAutosize from \"react-textarea-autosize\";\n\nconst Form = ({inputTitle,inputText,setInputText,setInputTitle,notes,setNotes}) => {\n  const inputTitleHandler = (e) => {\n    setInputTitle(e.target.value);\n  };\n\n  const inputTextHandler = (e) => {\n    setInputText(e.target.value);\n  };\n\n  const addNotesHandler = (e) => {\n    e.preventDefault();\n    setNotes([\n      ...notes,\n      {\n        title: inputTitle,\n        text: inputText,\n        date: moment().format(\"MMMM Do YYYY,h:mm:ss a\"),\n      },\n    ]);\n    setInputTitle(\"\");\n    setInputText(\"\");\n  };\n\n  function editNote(note) {\n    const index= notes.findIndex((item)=> item.id === note.id);\n    const copy = [...notes]\n    copy[index] = note;\n    setNotes(copy);\n  }\n\n  const removeHandler = (e) => {\n    e.preventDefault();\n    if (window.confirm(\"Are you sure you want to delete your note?\")) {\n        setNotes(notes.filter((notes => notes.date !== date)));\n    }\n};\n  return (\n    <form>\n      <div className=\"form-container\">\n        <input\n          type=\"text\"\n          value={inputTitle}\n          onChange={inputTitleHandler}\n          className=\"title-input\"\n          placeholder=\"Title\"\n        />\n        <TextareaAutosize\n          value={inputText}\n          onChange={inputTextHandler}\n          className=\"notes-input\"\n          placeholder=\"Note\"\n        />\n        <button\n          onClick={addNotesHandler}\n          type=\"submit\"\n          className=\"notes-button\"\n        >\n          Add to List\n        </button>\n      </div>\n      <NoteList noteList={noteList} removeHandler={removeHandler} editNote={editNote}/>\n    </form>\n  );\n};\n\nexport default Form;"]},"metadata":{},"sourceType":"module"}