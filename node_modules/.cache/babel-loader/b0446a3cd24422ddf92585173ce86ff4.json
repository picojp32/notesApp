{"ast":null,"code":"var _jsxFileName = \"/Users/jonathan.picovsky/Desktop/react-project-1-picojp32/ToDo/src/components/Notes.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState } from 'react'; // import EdiText from 'react-editext'\n\nimport Modal from 'react-modal';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nModal.setAppElement('#root');\n\nconst Notes = ({\n  notes,\n  setNotes,\n  title,\n  text,\n  date\n}) => {\n  _s();\n\n  const [modalIsOpen, setModalIsOpen] = useState(false); // const [setValue] = useState('');\n  // const handleSave = (val) => {\n  //     console.log('Edited Value -> ', val);\n  //     setValue(val);\n  //   };\n\n  const removeHandler = e => {\n    e.preventDefault();\n\n    if (window.confirm(\"Are you sure you want to delete your note?\")) {\n      setNotes(notes.filter(notes => notes.date !== date));\n    }\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"notes\",\n    children: [/*#__PURE__*/_jsxDEV(\"li\", {\n      className: \"note-item\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"date\",\n        children: date\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 28,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: removeHandler,\n        className: \"remove-btn\",\n        children: \"DELETE\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 29,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: () => setModalIsOpen(true),\n        className: \"modal-btn\",\n        children: \"OPEN\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 30,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        children: title\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 31,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        children: text\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 32,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 27,\n      columnNumber: 12\n    }, this), /*#__PURE__*/_jsxDEV(Modal, {\n      isOpen: modalIsOpen,\n      onRequestClose: () => setModalIsOpen(false),\n      children: /*#__PURE__*/_jsxDEV(\"li\", {\n        className: \"note-item\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"date\",\n          children: date\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 36,\n          columnNumber: 17\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          children: title\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 43,\n          columnNumber: 33\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"text\",\n          id: notes.text,\n          value: notes.text,\n          onChange: e => this.setUpdate(e.target.value, notes.text),\n          className: \"text\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 44,\n          columnNumber: 33\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: () => setModalIsOpen(false),\n          className: \"close-btn\",\n          children: \"Close\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 47,\n          columnNumber: 17\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 35,\n        columnNumber: 12\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 34,\n      columnNumber: 12\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 26,\n    columnNumber: 8\n  }, this);\n};\n\n_s(Notes, \"d4gKB9FOjUoqrytIak5jiPIqzB0=\");\n\n_c = Notes;\nexport default Notes;\n\nvar _c;\n\n$RefreshReg$(_c, \"Notes\");","map":{"version":3,"sources":["/Users/jonathan.picovsky/Desktop/react-project-1-picojp32/ToDo/src/components/Notes.js"],"names":["React","useState","Modal","setAppElement","Notes","notes","setNotes","title","text","date","modalIsOpen","setModalIsOpen","removeHandler","e","preventDefault","window","confirm","filter","setUpdate","target","value"],"mappings":";;;AAAA,OAAOA,KAAP,IAAcC,QAAd,QAA6B,OAA7B,C,CACA;;AAEA,OAAOC,KAAP,MAAkB,aAAlB;;AAGAA,KAAK,CAACC,aAAN,CAAoB,OAApB;;AAEA,MAAMC,KAAK,GAAG,CAAC;AAACC,EAAAA,KAAD;AAAQC,EAAAA,QAAR;AAAiBC,EAAAA,KAAjB;AAAuBC,EAAAA,IAAvB;AAA6BC,EAAAA;AAA7B,CAAD,KAAwC;AAAA;;AAClD,QAAM,CAACC,WAAD,EAAcC,cAAd,IAAgCV,QAAQ,CAAC,KAAD,CAA9C,CADkD,CAElD;AAEA;AACA;AACA;AACA;;AAEA,QAAMW,aAAa,GAAIC,CAAD,IAAO;AACzBA,IAAAA,CAAC,CAACC,cAAF;;AACA,QAAIC,MAAM,CAACC,OAAP,CAAe,4CAAf,CAAJ,EAAkE;AAC9DV,MAAAA,QAAQ,CAACD,KAAK,CAACY,MAAN,CAAcZ,KAAK,IAAIA,KAAK,CAACI,IAAN,KAAeA,IAAtC,CAAD,CAAR;AACH;AACJ,GALD;;AAOA,sBACG;AAAK,IAAA,SAAS,EAAC,OAAf;AAAA,4BACI;AAAI,MAAA,SAAS,EAAC,WAAd;AAAA,8BACK;AAAK,QAAA,SAAS,EAAC,MAAf;AAAA,kBAAuBA;AAAvB;AAAA;AAAA;AAAA;AAAA,cADL,eAEK;AAAQ,QAAA,OAAO,EAAEG,aAAjB;AAA+B,QAAA,SAAS,EAAC,YAAzC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cAFL,eAGK;AAAQ,QAAA,OAAO,EAAE,MAAKD,cAAc,CAAC,IAAD,CAApC;AAA2C,QAAA,SAAS,EAAC,WAArD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cAHL,eAIK;AAAA,kBAAMJ;AAAN;AAAA;AAAA;AAAA;AAAA,cAJL,eAKK;AAAA,kBAAMC;AAAN;AAAA;AAAA;AAAA;AAAA,cALL;AAAA;AAAA;AAAA;AAAA;AAAA,YADJ,eAQI,QAAC,KAAD;AAAO,MAAA,MAAM,EAAEE,WAAf;AAA4B,MAAA,cAAc,EAAE,MAAMC,cAAc,CAAC,KAAD,CAAhE;AAAA,6BACA;AAAI,QAAA,SAAS,EAAC,WAAd;AAAA,gCACK;AAAK,UAAA,SAAS,EAAC,MAAf;AAAA,oBAAuBF;AAAvB;AAAA;AAAA;AAAA;AAAA,gBADL,eAQqB;AAAA,oBAAMF;AAAN;AAAA;AAAA;AAAA;AAAA,gBARrB,eASqB;AAAO,UAAA,IAAI,EAAC,MAAZ;AAAmB,UAAA,EAAE,EAAEF,KAAK,CAACG,IAA7B;AAAmC,UAAA,KAAK,EAAGH,KAAK,CAACG,IAAjD;AAAuD,UAAA,QAAQ,EAC1EK,CAAD,IAAO,KAAKK,SAAL,CAAeL,CAAC,CAACM,MAAF,CAASC,KAAxB,EAA+Bf,KAAK,CAACG,IAArC,CADK;AAEd,UAAA,SAAS,EAAC;AAFI;AAAA;AAAA;AAAA;AAAA,gBATrB,eAYK;AAAQ,UAAA,OAAO,EAAE,MAAKG,cAAc,CAAC,KAAD,CAApC;AACA,UAAA,SAAS,EAAC,WADV;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBAZL;AAAA;AAAA;AAAA;AAAA;AAAA;AADA;AAAA;AAAA;AAAA;AAAA,YARJ;AAAA;AAAA;AAAA;AAAA;AAAA,UADH;AA4BH,CA5CD;;GAAMP,K;;KAAAA,K;AA8CN,eAAeA,KAAf","sourcesContent":["import React,{useState} from 'react'\n// import EdiText from 'react-editext'\n\nimport Modal from 'react-modal'\n\n\nModal.setAppElement('#root')\n\nconst Notes = ({notes, setNotes,title,text, date}) => {\n    const [modalIsOpen, setModalIsOpen] = useState(false)\n    // const [setValue] = useState('');\n\n    // const handleSave = (val) => {\n    //     console.log('Edited Value -> ', val);\n    //     setValue(val);\n    //   };\n\n    const removeHandler = (e) => {\n        e.preventDefault();\n        if (window.confirm(\"Are you sure you want to delete your note?\")) {\n            setNotes(notes.filter((notes => notes.date !== date)));\n        }\n    };\n\n    return(\n       <div className=\"notes\">\n           <li className=\"note-item\">\n                <div className=\"date\">{date}</div>\n                <button onClick={removeHandler}className=\"remove-btn\">DELETE</button> \n                <button onClick={()=> setModalIsOpen(true)}className=\"modal-btn\">OPEN</button>\n                <div>{title}</div>\n                <div>{text}</div>\n            </li>  \n           <Modal isOpen={modalIsOpen} onRequestClose={() => setModalIsOpen(false)}>\n           <li className=\"note-item\">\n                <div className=\"date\">{date}</div>\n                {/* <EdiText\n                    type=\"text\"\n                    value={text}\n                    onSave={handleSave}\n                    hideIcons={true}\n                /> */}\n                                <div>{title}</div>\n                                <input type=\"text\" id={notes.text} value ={notes.text} onChange={\n                    (e) => this.setUpdate(e.target.value, notes.text)\n                } className=\"text\"/>\n                <button onClick={()=> setModalIsOpen(false)}\n                className=\"close-btn\">Close</button> \n            </li>\n            </Modal> \n       </div>     \n    );\n}\n\nexport default Notes;\n\n\n"]},"metadata":{},"sourceType":"module"}