{"ast":null,"code":"var _jsxFileName = \"/Users/jonathan.picovsky/Desktop/react-project-1-picojp32/ToDo/src/components/Notes.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState } from 'react';\nimport Modal from 'react-modal';\nimport EdiText from \"react-editext\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nModal.setAppElement('#root');\n\nconst Notes = ({\n  notes,\n  setNotes,\n  title,\n  text,\n  date,\n  newDate\n}) => {\n  _s();\n\n  const [modalIsOpen, setModalIsOpen] = useState(false);\n  const [editing] = useState(\"\");\n  const [newText, setValue] = useState(\"\");\n\n  const removeHandler = (e, id) => {\n    e.preventDefault();\n\n    if (window.confirm(\"Are you sure you want to delete your note?\")) {\n      setNotes(notes.filter(notes => notes.date !== date));\n    }\n  };\n\n  const handleSave = newText => {\n    setValue(newText);\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"notes\",\n    children: [/*#__PURE__*/_jsxDEV(\"li\", {\n      className: \"note-item\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"date\",\n        children: date\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 28,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: removeHandler,\n        className: \"remove-btn\",\n        children: \"DELETE\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 29,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: () => setModalIsOpen(true),\n        className: \"modal-btn\",\n        children: \"OPEN\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 30,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        children: title\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 31,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"text\",\n        children: newText\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 32,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"text\",\n        children: text\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 33,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 27,\n      columnNumber: 12\n    }, this), /*#__PURE__*/_jsxDEV(Modal, {\n      isOpen: modalIsOpen,\n      onRequestClose: () => setModalIsOpen(false),\n      children: /*#__PURE__*/_jsxDEV(\"li\", {\n        className: \"note-item\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"date\",\n          children: newDate\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 38,\n          columnNumber: 17\n        }, this), /*#__PURE__*/_jsxDEV(EdiText, {\n          value: title,\n          type: \"text\",\n          onSave: handleSave,\n          editing: editing\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 39,\n          columnNumber: 17\n        }, this), /*#__PURE__*/_jsxDEV(EdiText, {\n          value: text,\n          type: \"text\",\n          onSave: handleSave,\n          editing: editing\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 45,\n          columnNumber: 17\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: () => setModalIsOpen(false),\n          className: \"close-btn\",\n          children: \"Close\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 51,\n          columnNumber: 17\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 37,\n        columnNumber: 12\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 36,\n      columnNumber: 12\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 26,\n    columnNumber: 8\n  }, this);\n};\n\n_s(Notes, \"FKnFnxARUkT8N0L8Vd/cNKM3aFI=\");\n\n_c = Notes;\nexport default Notes;\n\nvar _c;\n\n$RefreshReg$(_c, \"Notes\");","map":{"version":3,"sources":["/Users/jonathan.picovsky/Desktop/react-project-1-picojp32/ToDo/src/components/Notes.js"],"names":["React","useState","Modal","EdiText","setAppElement","Notes","notes","setNotes","title","text","date","newDate","modalIsOpen","setModalIsOpen","editing","newText","setValue","removeHandler","e","id","preventDefault","window","confirm","filter","handleSave"],"mappings":"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","sourcesContent":["import React,{useState} from 'react'\nimport Modal from 'react-modal'\nimport EdiText from \"react-editext\";\n\n\nModal.setAppElement('#root')\n\n\nconst Notes = ({notes, setNotes, title, text, date, newDate}) =>{\n    const [modalIsOpen, setModalIsOpen] = useState(false)\n    const [editing] = useState(\"\");\n    const [newText, setValue] = useState(\"\");\n\n    const removeHandler = (e, id) => {\n        e.preventDefault();\n        if (window.confirm(\"Are you sure you want to delete your note?\")) {\n            setNotes(notes.filter(notes => notes.date !== date));\n        }\n    };\n\n    const handleSave = (newText) => {\n        setValue(newText);\n    };\n\n    return(\n       <div className=\"notes\">\n           <li className=\"note-item\">\n                <div className=\"date\">{date}</div>\n                <button onClick={removeHandler}className=\"remove-btn\">DELETE</button> \n                <button onClick={()=> setModalIsOpen(true)}className=\"modal-btn\">OPEN</button>\n                <div>{title}</div>\n                <div className=\"text\">{newText}</div>\n                <div className=\"text\">{text}</div>\n\n            </li>  \n           <Modal isOpen={modalIsOpen} onRequestClose={() => setModalIsOpen(false)}>\n           <li className=\"note-item\">\n                <div className=\"date\">{newDate}</div>\n                <EdiText\n                value={title}\n                type=\"text\"\n                onSave={handleSave}\n                editing={editing}\n                />\n                <EdiText\n                value={text}\n                type=\"text\"\n                onSave={handleSave}\n                editing={editing}\n                />\n                <button onClick={()=> setModalIsOpen(false)}\n                className=\"close-btn\">Close</button>\n            </li>\n            </Modal> \n       </div>     \n    );\n}\n\nexport default Notes;\n"]},"metadata":{},"sourceType":"module"}