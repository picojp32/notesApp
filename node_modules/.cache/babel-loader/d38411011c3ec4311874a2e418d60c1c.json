{"ast":null,"code":"var _jsxFileName = \"/Users/jonathan.picovsky/Desktop/react-project-1-picojp32/ToDo/src/components/Notes.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState } from 'react';\nimport Modal from 'react-modal';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nModal.setAppElement('#root');\n\nconst Notes = ({\n  notes,\n  setNotes,\n  title,\n  text,\n  date,\n  index\n}) => {\n  _s();\n\n  const [modalIsOpen, setModalIsOpen] = useState(false);\n\n  const removeHandler = (e, id) => {\n    e.preventDefault();\n\n    if (window.confirm(\"Are you sure you want to delete your note?\")) {\n      setNotes(notes.filter(note => note.index !== index));\n    }\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"notes\",\n    children: [/*#__PURE__*/_jsxDEV(\"li\", {\n      className: \"note-item\",\n      children: [/*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: () => setModalIsOpen(true),\n        className: \"modal-btn\",\n        children: \"Open\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 18,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"date\",\n        children: date\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 19,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        children: title\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 20,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n        className: \"text\",\n        children: text\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 21,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: removeHandler,\n        className: \"remove-btn\",\n        children: \"\\uD83D\\uDDD1\\uFE0F\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 22,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 17,\n      columnNumber: 12\n    }, this), /*#__PURE__*/_jsxDEV(Modal, {\n      isOpen: modalIsOpen,\n      onRequestClose: () => setModalIsOpen(false),\n      children: /*#__PURE__*/_jsxDEV(\"li\", {\n        className: \"note-item\",\n        children: [/*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: () => setModalIsOpen(false),\n          className: \"close-btn\",\n          children: \"Close\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 26,\n          columnNumber: 17\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"date\",\n          children: date\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 27,\n          columnNumber: 17\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          children: title\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 28,\n          columnNumber: 17\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 25,\n        columnNumber: 12\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 24,\n      columnNumber: 12\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 16,\n    columnNumber: 8\n  }, this);\n};\n\n_s(Notes, \"d4gKB9FOjUoqrytIak5jiPIqzB0=\");\n\n_c = Notes;\nexport default Notes;\n\nvar _c;\n\n$RefreshReg$(_c, \"Notes\");","map":{"version":3,"sources":["/Users/jonathan.picovsky/Desktop/react-project-1-picojp32/ToDo/src/components/Notes.js"],"names":["React","useState","Modal","setAppElement","Notes","notes","setNotes","title","text","date","index","modalIsOpen","setModalIsOpen","removeHandler","e","id","preventDefault","window","confirm","filter","note"],"mappings":";;;AAAA,OAAOA,KAAP,IAAcC,QAAd,QAA6B,OAA7B;AACA,OAAOC,KAAP,MAAkB,aAAlB;;AAEAA,KAAK,CAACC,aAAN,CAAoB,OAApB;;AAEA,MAAMC,KAAK,GAAG,CAAC;AAAEC,EAAAA,KAAF;AAASC,EAAAA,QAAT;AAAmBC,EAAAA,KAAnB;AAA0BC,EAAAA,IAA1B;AAAgCC,EAAAA,IAAhC;AAAsCC,EAAAA;AAAtC,CAAD,KAAiD;AAAA;;AAC3D,QAAM,CAACC,WAAD,EAAcC,cAAd,IAAgCX,QAAQ,CAAC,KAAD,CAA9C;;AAEA,QAAMY,aAAa,GAAG,CAACC,CAAD,EAAIC,EAAJ,KAAW;AAC7BD,IAAAA,CAAC,CAACE,cAAF;;AACA,QAAIC,MAAM,CAACC,OAAP,CAAe,4CAAf,CAAJ,EAAkE;AAC9DZ,MAAAA,QAAQ,CAACD,KAAK,CAACc,MAAN,CAAaC,IAAI,IAAIA,IAAI,CAACV,KAAL,KAAeA,KAApC,CAAD,CAAR;AACH;AACJ,GALD;;AAMA,sBACG;AAAK,IAAA,SAAS,EAAC,OAAf;AAAA,4BACI;AAAI,MAAA,SAAS,EAAC,WAAd;AAAA,8BACK;AAAQ,QAAA,OAAO,EAAE,MAAKE,cAAc,CAAC,IAAD,CAApC;AAA2C,QAAA,SAAS,EAAC,WAArD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cADL,eAEK;AAAK,QAAA,SAAS,EAAC,MAAf;AAAA,kBAAuBH;AAAvB;AAAA;AAAA;AAAA;AAAA,cAFL,eAGK;AAAA,kBAAMF;AAAN;AAAA;AAAA;AAAA;AAAA,cAHL,eAIK;AAAM,QAAA,SAAS,EAAC,MAAhB;AAAA,kBAAwBC;AAAxB;AAAA;AAAA;AAAA;AAAA,cAJL,eAKK;AAAQ,QAAA,OAAO,EAAEK,aAAjB;AAA+B,QAAA,SAAS,EAAC,YAAzC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cALL;AAAA;AAAA;AAAA;AAAA;AAAA,YADJ,eAQI,QAAC,KAAD;AAAO,MAAA,MAAM,EAAEF,WAAf;AAA4B,MAAA,cAAc,EAAE,MAAMC,cAAc,CAAC,KAAD,CAAhE;AAAA,6BACA;AAAI,QAAA,SAAS,EAAC,WAAd;AAAA,gCACK;AAAQ,UAAA,OAAO,EAAE,MAAKA,cAAc,CAAC,KAAD,CAApC;AAA6C,UAAA,SAAS,EAAC,WAAvD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBADL,eAEK;AAAK,UAAA,SAAS,EAAC,MAAf;AAAA,oBAAuBH;AAAvB;AAAA;AAAA;AAAA;AAAA,gBAFL,eAGK;AAAA,oBAAMF;AAAN;AAAA;AAAA;AAAA;AAAA,gBAHL;AAAA;AAAA;AAAA;AAAA;AAAA;AADA;AAAA;AAAA;AAAA;AAAA,YARJ;AAAA;AAAA;AAAA;AAAA;AAAA,UADH;AAkBH,CA3BD;;GAAMH,K;;KAAAA,K;AA6BN,eAAeA,KAAf","sourcesContent":["import React,{useState} from 'react'\nimport Modal from 'react-modal'\n\nModal.setAppElement('#root')\n\nconst Notes = ({ notes, setNotes, title, text, date, index}) =>{\n    const [modalIsOpen, setModalIsOpen] = useState(false)\n\n    const removeHandler = (e, id) => {\n        e.preventDefault();\n        if (window.confirm(\"Are you sure you want to delete your note?\")) {\n            setNotes(notes.filter(note => note.index !== index));\n        }\n    };\n    return(\n       <div className=\"notes\">\n           <li className=\"note-item\">\n                <button onClick={()=> setModalIsOpen(true)}className=\"modal-btn\">Open</button>\n                <div className=\"date\">{date}</div>\n                <div>{title}</div>\n                <span className=\"text\">{text}</span>\n                <button onClick={removeHandler}className=\"remove-btn\">🗑️</button> \n            </li>  \n           <Modal isOpen={modalIsOpen} onRequestClose={() => setModalIsOpen(false)}>\n           <li className=\"note-item\">\n                <button onClick={()=> setModalIsOpen(false)} className=\"close-btn\">Close</button> \n                <div className=\"date\">{date}</div>\n                <div>{title}</div>\n            </li>\n            </Modal> \n       </div>     \n    );\n}\n\nexport default Notes;\n"]},"metadata":{},"sourceType":"module"}