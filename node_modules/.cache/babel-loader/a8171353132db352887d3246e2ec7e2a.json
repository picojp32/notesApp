{"ast":null,"code":"var _jsxFileName = \"/Users/jonathan.picovsky/Desktop/react-project-1-picojp32/NotesApp/src/components/Notes.js\",\n    _s = $RefreshSig$();\n\nimport moment from 'moment';\nimport React, { useState } from 'react';\nimport Modal from 'react-modal';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nModal.setAppElement('#root');\n\nconst Notes = ({\n  note,\n  notes,\n  setNotes,\n  title,\n  text,\n  date,\n  newDate\n}) => {\n  _s();\n\n  const [modalIsOpen, setModalIsOpen] = useState(false);\n  const [noteSave, setNoteSave] = useState({\n    id: '',\n    title: '',\n    text: '',\n    date: '',\n    newDate: ''\n  });\n\n  const handleSubmit = e => {\n    e.preventDefault();\n    note.editNotes({ ...noteSave,\n      newDate: moment().format(\"MMMM Do YYYY,h:mm:ss a\")\n    });\n    setModalIsOpen(false);\n  };\n\n  const removeHandler = e => {\n    e.preventDefault();\n\n    if (window.confirm(\"Are you sure you want to delete your note?\")) {\n      setNotes(notes.filter(notes => notes.date !== date));\n    }\n  };\n\n  const openNote = note => {\n    setNoteSave(note);\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"notes\",\n    children: [/*#__PURE__*/_jsxDEV(\"ul\", {\n      children: props.notesList.map(note => /*#__PURE__*/_jsxDEV(\"li\", {\n        className: \"note-item\",\n        onClick: () => openNote(note),\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"date\",\n          children: date\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 41,\n          columnNumber: 29\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"date\",\n          children: newDate\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 42,\n          columnNumber: 29\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: removeHandler,\n          className: \"remove-btn\",\n          children: \"DELETE\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 43,\n          columnNumber: 29\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: () => setModalIsOpen(true),\n          className: \"modal-btn\",\n          children: \"OPEN\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 44,\n          columnNumber: 29\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          children: title\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 45,\n          columnNumber: 29\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          children: text\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 46,\n          columnNumber: 29\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 40,\n        columnNumber: 25\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 38,\n      columnNumber: 17\n    }, this), /*#__PURE__*/_jsxDEV(Modal, {\n      isOpen: modalIsOpen,\n      onRequestClose: () => setModalIsOpen(false),\n      children: /*#__PURE__*/_jsxDEV(\"li\", {\n        className: \"note-item\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"date\",\n          children: date\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 52,\n          columnNumber: 17\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          children: [\"Title:\", /*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"text\",\n            value: title,\n            onChange: e => setNoteSave({ ...noteSave,\n              title: e.target.value\n            })\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 53,\n            columnNumber: 28\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 53,\n          columnNumber: 17\n        }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n          onSubmit: handleSubmit,\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            children: [\"Note:\", /*#__PURE__*/_jsxDEV(\"input\", {\n              type: \"text\",\n              value: text,\n              onChange: e => setNoteSave({ ...noteSave,\n                text: e.target.value\n              })\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 55,\n              columnNumber: 27\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 55,\n            columnNumber: 17\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            onClick: () => setModalIsOpen(false),\n            className: \"close-btn\",\n            children: \"Close\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 56,\n            columnNumber: 17\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 54,\n          columnNumber: 17\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 51,\n        columnNumber: 13\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 50,\n      columnNumber: 12\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 37,\n    columnNumber: 8\n  }, this);\n};\n\n_s(Notes, \"Qmm+dCiYkMeirmQ4Yn7uAeRYv2g=\");\n\n_c = Notes;\nexport default Notes;\n\nvar _c;\n\n$RefreshReg$(_c, \"Notes\");","map":{"version":3,"sources":["/Users/jonathan.picovsky/Desktop/react-project-1-picojp32/NotesApp/src/components/Notes.js"],"names":["moment","React","useState","Modal","setAppElement","Notes","note","notes","setNotes","title","text","date","newDate","modalIsOpen","setModalIsOpen","noteSave","setNoteSave","id","handleSubmit","e","preventDefault","editNotes","format","removeHandler","window","confirm","filter","openNote","props","notesList","map","target","value"],"mappings":"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","sourcesContent":["import moment from 'moment'\nimport React,{useState} from 'react'\n\nimport Modal from 'react-modal'\n\n\nModal.setAppElement('#root')\n\nconst Notes = ({note, notes, setNotes,title,text, date, newDate}) => {\n    const [modalIsOpen, setModalIsOpen] = useState(false)\n    const [noteSave, setNoteSave] = useState({\n        id: '',\n        title: '',\n        text: '',\n        date: '',\n        newDate:'',\n    })\n\n    const handleSubmit = (e) =>{\n        e.preventDefault();\n        note.editNotes({...noteSave, newDate:moment().format(\"MMMM Do YYYY,h:mm:ss a\")});\n        setModalIsOpen(false);\n    }\n\n    const removeHandler = (e) => {\n        e.preventDefault();\n        if (window.confirm(\"Are you sure you want to delete your note?\")) {\n            setNotes(notes.filter((notes => notes.date !== date)));\n        }\n    };\n\n    const openNote = (note) =>{\n        setNoteSave(note);\n    };\n \n    return(\n       <div className=\"notes\">\n                <ul>\n                    {props.notesList.map((note) => (\n                        <li className=\"note-item\" onClick={() => openNote(note)}>\n                            <div className=\"date\">{date}</div>\n                            <div className=\"date\">{newDate}</div>\n                            <button onClick={removeHandler}className=\"remove-btn\">DELETE</button> \n                            <button onClick={()=> setModalIsOpen(true)}className=\"modal-btn\">OPEN</button>\n                            <div>{title}</div>\n                            <div>{text}</div>\n                        </li> \n                    ))} \n                </ul>\n           <Modal isOpen={modalIsOpen} onRequestClose={() => setModalIsOpen(false)}>\n            <li className=\"note-item\">\n                <div className=\"date\">{date}</div>\n                <div>Title:<input type='text' value={title} onChange={(e) =>setNoteSave({...noteSave, title:e.target.value})}/></div>\n                <form onSubmit={handleSubmit}>\n                <div>Note:<input type='text' value={text} onChange={(e) =>setNoteSave({...noteSave, text:e.target.value})}/></div>\n                <button onClick={()=> setModalIsOpen(false)} className=\"close-btn\">Close</button>\n                </form>\n            </li>\n            </Modal>\n       </div>     \n    );\n}\n\nexport default Notes;\n\n\n"]},"metadata":{},"sourceType":"module"}